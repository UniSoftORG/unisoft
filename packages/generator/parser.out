Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> program gen_element
Rule 2     program -> gen_element
Rule 3     statements -> statements statement
Rule 4     statements -> statement
Rule 5     gen_element -> GEN_ELEMENT LPAREN gen_params RPAREN COLON statements children GEN_END
Rule 6     gen_params -> gen_params COMMA gen_param
Rule 7     gen_params -> gen_param
Rule 8     gen_param -> TEXT COLON value
Rule 9     children -> children child
Rule 10    children -> child
Rule 11    children -> <empty>
Rule 12    child -> GEN_CHILD LPAREN TEXT RPAREN
Rule 13    statement -> VARIABLE TEXT EQUALS item
Rule 14    item -> object
Rule 15    item -> list
Rule 16    item -> NUMBER
Rule 17    item -> STRING
Rule 18    object -> LCURLY keyvalues RCURLY
Rule 19    list -> LBRACKET items RBRACKET
Rule 20    items -> items COMMA item
Rule 21    items -> item
Rule 22    items -> <empty>
Rule 23    keyvalues -> keyvalues COMMA keyvalue
Rule 24    keyvalues -> keyvalue
Rule 25    keyvalues -> <empty>
Rule 26    keyvalue -> TEXT COLON value
Rule 27    value -> STRING
Rule 28    value -> object
Rule 29    value -> NUMBER

Terminals, with rules where they appear

COLON                : 5 8 26
COMMA                : 6 20 23
EQUALS               : 13
GEN_CHILD            : 12
GEN_ELEMENT          : 5
GEN_END              : 5
LBRACKET             : 19
LCURLY               : 18
LPAREN               : 5 12
NUMBER               : 16 29
RBRACKET             : 19
RCURLY               : 18
RPAREN               : 5 12
STRING               : 17 27
TEXT                 : 8 12 13 26
VARIABLE             : 13
error                : 

Nonterminals, with rules where they appear

child                : 9 10
children             : 5 9
gen_element          : 1 2
gen_param            : 6 7
gen_params           : 5 6
item                 : 13 20 21
items                : 19 20
keyvalue             : 23 24
keyvalues            : 18 23
list                 : 15
object               : 14 28
program              : 1 0
statement            : 3 4
statements           : 3 5
value                : 8 26

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . program gen_element
    (2) program -> . gen_element
    (5) gen_element -> . GEN_ELEMENT LPAREN gen_params RPAREN COLON statements children GEN_END

    GEN_ELEMENT     shift and go to state 3

    program                        shift and go to state 1
    gen_element                    shift and go to state 2

state 1

    (0) S' -> program .
    (1) program -> program . gen_element
    (5) gen_element -> . GEN_ELEMENT LPAREN gen_params RPAREN COLON statements children GEN_END

    GEN_ELEMENT     shift and go to state 3

    gen_element                    shift and go to state 4

state 2

    (2) program -> gen_element .

    GEN_ELEMENT     reduce using rule 2 (program -> gen_element .)
    $end            reduce using rule 2 (program -> gen_element .)


state 3

    (5) gen_element -> GEN_ELEMENT . LPAREN gen_params RPAREN COLON statements children GEN_END

    LPAREN          shift and go to state 5


state 4

    (1) program -> program gen_element .

    GEN_ELEMENT     reduce using rule 1 (program -> program gen_element .)
    $end            reduce using rule 1 (program -> program gen_element .)


state 5

    (5) gen_element -> GEN_ELEMENT LPAREN . gen_params RPAREN COLON statements children GEN_END
    (6) gen_params -> . gen_params COMMA gen_param
    (7) gen_params -> . gen_param
    (8) gen_param -> . TEXT COLON value

    TEXT            shift and go to state 8

    gen_params                     shift and go to state 6
    gen_param                      shift and go to state 7

state 6

    (5) gen_element -> GEN_ELEMENT LPAREN gen_params . RPAREN COLON statements children GEN_END
    (6) gen_params -> gen_params . COMMA gen_param

    RPAREN          shift and go to state 9
    COMMA           shift and go to state 10


state 7

    (7) gen_params -> gen_param .

    RPAREN          reduce using rule 7 (gen_params -> gen_param .)
    COMMA           reduce using rule 7 (gen_params -> gen_param .)


state 8

    (8) gen_param -> TEXT . COLON value

    COLON           shift and go to state 11


state 9

    (5) gen_element -> GEN_ELEMENT LPAREN gen_params RPAREN . COLON statements children GEN_END

    COLON           shift and go to state 12


state 10

    (6) gen_params -> gen_params COMMA . gen_param
    (8) gen_param -> . TEXT COLON value

    TEXT            shift and go to state 8

    gen_param                      shift and go to state 13

state 11

    (8) gen_param -> TEXT COLON . value
    (27) value -> . STRING
    (28) value -> . object
    (29) value -> . NUMBER
    (18) object -> . LCURLY keyvalues RCURLY

    STRING          shift and go to state 15
    NUMBER          shift and go to state 17
    LCURLY          shift and go to state 18

    value                          shift and go to state 14
    object                         shift and go to state 16

state 12

    (5) gen_element -> GEN_ELEMENT LPAREN gen_params RPAREN COLON . statements children GEN_END
    (3) statements -> . statements statement
    (4) statements -> . statement
    (13) statement -> . VARIABLE TEXT EQUALS item

    VARIABLE        shift and go to state 21

    statements                     shift and go to state 19
    statement                      shift and go to state 20

state 13

    (6) gen_params -> gen_params COMMA gen_param .

    RPAREN          reduce using rule 6 (gen_params -> gen_params COMMA gen_param .)
    COMMA           reduce using rule 6 (gen_params -> gen_params COMMA gen_param .)


state 14

    (8) gen_param -> TEXT COLON value .

    RPAREN          reduce using rule 8 (gen_param -> TEXT COLON value .)
    COMMA           reduce using rule 8 (gen_param -> TEXT COLON value .)


state 15

    (27) value -> STRING .

    RPAREN          reduce using rule 27 (value -> STRING .)
    COMMA           reduce using rule 27 (value -> STRING .)
    RCURLY          reduce using rule 27 (value -> STRING .)


state 16

    (28) value -> object .

    RPAREN          reduce using rule 28 (value -> object .)
    COMMA           reduce using rule 28 (value -> object .)
    RCURLY          reduce using rule 28 (value -> object .)


state 17

    (29) value -> NUMBER .

    RPAREN          reduce using rule 29 (value -> NUMBER .)
    COMMA           reduce using rule 29 (value -> NUMBER .)
    RCURLY          reduce using rule 29 (value -> NUMBER .)


state 18

    (18) object -> LCURLY . keyvalues RCURLY
    (23) keyvalues -> . keyvalues COMMA keyvalue
    (24) keyvalues -> . keyvalue
    (25) keyvalues -> .
    (26) keyvalue -> . TEXT COLON value

    RCURLY          reduce using rule 25 (keyvalues -> .)
    COMMA           reduce using rule 25 (keyvalues -> .)
    TEXT            shift and go to state 24

    keyvalues                      shift and go to state 22
    keyvalue                       shift and go to state 23

state 19

    (5) gen_element -> GEN_ELEMENT LPAREN gen_params RPAREN COLON statements . children GEN_END
    (3) statements -> statements . statement
    (9) children -> . children child
    (10) children -> . child
    (11) children -> .
    (13) statement -> . VARIABLE TEXT EQUALS item
    (12) child -> . GEN_CHILD LPAREN TEXT RPAREN

  ! shift/reduce conflict for GEN_CHILD resolved as shift
    GEN_END         reduce using rule 11 (children -> .)
    VARIABLE        shift and go to state 21
    GEN_CHILD       shift and go to state 28

  ! GEN_CHILD       [ reduce using rule 11 (children -> .) ]

    children                       shift and go to state 25
    statement                      shift and go to state 26
    child                          shift and go to state 27

state 20

    (4) statements -> statement .

    VARIABLE        reduce using rule 4 (statements -> statement .)
    GEN_CHILD       reduce using rule 4 (statements -> statement .)
    GEN_END         reduce using rule 4 (statements -> statement .)


state 21

    (13) statement -> VARIABLE . TEXT EQUALS item

    TEXT            shift and go to state 29


state 22

    (18) object -> LCURLY keyvalues . RCURLY
    (23) keyvalues -> keyvalues . COMMA keyvalue

    RCURLY          shift and go to state 30
    COMMA           shift and go to state 31


state 23

    (24) keyvalues -> keyvalue .

    RCURLY          reduce using rule 24 (keyvalues -> keyvalue .)
    COMMA           reduce using rule 24 (keyvalues -> keyvalue .)


state 24

    (26) keyvalue -> TEXT . COLON value

    COLON           shift and go to state 32


state 25

    (5) gen_element -> GEN_ELEMENT LPAREN gen_params RPAREN COLON statements children . GEN_END
    (9) children -> children . child
    (12) child -> . GEN_CHILD LPAREN TEXT RPAREN

    GEN_END         shift and go to state 33
    GEN_CHILD       shift and go to state 28

    child                          shift and go to state 34

state 26

    (3) statements -> statements statement .

    VARIABLE        reduce using rule 3 (statements -> statements statement .)
    GEN_CHILD       reduce using rule 3 (statements -> statements statement .)
    GEN_END         reduce using rule 3 (statements -> statements statement .)


state 27

    (10) children -> child .

    GEN_END         reduce using rule 10 (children -> child .)
    GEN_CHILD       reduce using rule 10 (children -> child .)


state 28

    (12) child -> GEN_CHILD . LPAREN TEXT RPAREN

    LPAREN          shift and go to state 35


state 29

    (13) statement -> VARIABLE TEXT . EQUALS item

    EQUALS          shift and go to state 36


state 30

    (18) object -> LCURLY keyvalues RCURLY .

    RPAREN          reduce using rule 18 (object -> LCURLY keyvalues RCURLY .)
    COMMA           reduce using rule 18 (object -> LCURLY keyvalues RCURLY .)
    RCURLY          reduce using rule 18 (object -> LCURLY keyvalues RCURLY .)
    VARIABLE        reduce using rule 18 (object -> LCURLY keyvalues RCURLY .)
    GEN_CHILD       reduce using rule 18 (object -> LCURLY keyvalues RCURLY .)
    GEN_END         reduce using rule 18 (object -> LCURLY keyvalues RCURLY .)
    RBRACKET        reduce using rule 18 (object -> LCURLY keyvalues RCURLY .)


state 31

    (23) keyvalues -> keyvalues COMMA . keyvalue
    (26) keyvalue -> . TEXT COLON value

    TEXT            shift and go to state 24

    keyvalue                       shift and go to state 37

state 32

    (26) keyvalue -> TEXT COLON . value
    (27) value -> . STRING
    (28) value -> . object
    (29) value -> . NUMBER
    (18) object -> . LCURLY keyvalues RCURLY

    STRING          shift and go to state 15
    NUMBER          shift and go to state 17
    LCURLY          shift and go to state 18

    value                          shift and go to state 38
    object                         shift and go to state 16

state 33

    (5) gen_element -> GEN_ELEMENT LPAREN gen_params RPAREN COLON statements children GEN_END .

    GEN_ELEMENT     reduce using rule 5 (gen_element -> GEN_ELEMENT LPAREN gen_params RPAREN COLON statements children GEN_END .)
    $end            reduce using rule 5 (gen_element -> GEN_ELEMENT LPAREN gen_params RPAREN COLON statements children GEN_END .)


state 34

    (9) children -> children child .

    GEN_END         reduce using rule 9 (children -> children child .)
    GEN_CHILD       reduce using rule 9 (children -> children child .)


state 35

    (12) child -> GEN_CHILD LPAREN . TEXT RPAREN

    TEXT            shift and go to state 39


state 36

    (13) statement -> VARIABLE TEXT EQUALS . item
    (14) item -> . object
    (15) item -> . list
    (16) item -> . NUMBER
    (17) item -> . STRING
    (18) object -> . LCURLY keyvalues RCURLY
    (19) list -> . LBRACKET items RBRACKET

    NUMBER          shift and go to state 43
    STRING          shift and go to state 44
    LCURLY          shift and go to state 18
    LBRACKET        shift and go to state 45

    item                           shift and go to state 40
    object                         shift and go to state 41
    list                           shift and go to state 42

state 37

    (23) keyvalues -> keyvalues COMMA keyvalue .

    RCURLY          reduce using rule 23 (keyvalues -> keyvalues COMMA keyvalue .)
    COMMA           reduce using rule 23 (keyvalues -> keyvalues COMMA keyvalue .)


state 38

    (26) keyvalue -> TEXT COLON value .

    RCURLY          reduce using rule 26 (keyvalue -> TEXT COLON value .)
    COMMA           reduce using rule 26 (keyvalue -> TEXT COLON value .)


state 39

    (12) child -> GEN_CHILD LPAREN TEXT . RPAREN

    RPAREN          shift and go to state 46


state 40

    (13) statement -> VARIABLE TEXT EQUALS item .

    VARIABLE        reduce using rule 13 (statement -> VARIABLE TEXT EQUALS item .)
    GEN_CHILD       reduce using rule 13 (statement -> VARIABLE TEXT EQUALS item .)
    GEN_END         reduce using rule 13 (statement -> VARIABLE TEXT EQUALS item .)


state 41

    (14) item -> object .

    VARIABLE        reduce using rule 14 (item -> object .)
    GEN_CHILD       reduce using rule 14 (item -> object .)
    GEN_END         reduce using rule 14 (item -> object .)
    RBRACKET        reduce using rule 14 (item -> object .)
    COMMA           reduce using rule 14 (item -> object .)


state 42

    (15) item -> list .

    VARIABLE        reduce using rule 15 (item -> list .)
    GEN_CHILD       reduce using rule 15 (item -> list .)
    GEN_END         reduce using rule 15 (item -> list .)
    RBRACKET        reduce using rule 15 (item -> list .)
    COMMA           reduce using rule 15 (item -> list .)


state 43

    (16) item -> NUMBER .

    VARIABLE        reduce using rule 16 (item -> NUMBER .)
    GEN_CHILD       reduce using rule 16 (item -> NUMBER .)
    GEN_END         reduce using rule 16 (item -> NUMBER .)
    RBRACKET        reduce using rule 16 (item -> NUMBER .)
    COMMA           reduce using rule 16 (item -> NUMBER .)


state 44

    (17) item -> STRING .

    VARIABLE        reduce using rule 17 (item -> STRING .)
    GEN_CHILD       reduce using rule 17 (item -> STRING .)
    GEN_END         reduce using rule 17 (item -> STRING .)
    RBRACKET        reduce using rule 17 (item -> STRING .)
    COMMA           reduce using rule 17 (item -> STRING .)


state 45

    (19) list -> LBRACKET . items RBRACKET
    (20) items -> . items COMMA item
    (21) items -> . item
    (22) items -> .
    (14) item -> . object
    (15) item -> . list
    (16) item -> . NUMBER
    (17) item -> . STRING
    (18) object -> . LCURLY keyvalues RCURLY
    (19) list -> . LBRACKET items RBRACKET

    RBRACKET        reduce using rule 22 (items -> .)
    COMMA           reduce using rule 22 (items -> .)
    NUMBER          shift and go to state 43
    STRING          shift and go to state 44
    LCURLY          shift and go to state 18
    LBRACKET        shift and go to state 45

    items                          shift and go to state 47
    item                           shift and go to state 48
    object                         shift and go to state 41
    list                           shift and go to state 42

state 46

    (12) child -> GEN_CHILD LPAREN TEXT RPAREN .

    GEN_END         reduce using rule 12 (child -> GEN_CHILD LPAREN TEXT RPAREN .)
    GEN_CHILD       reduce using rule 12 (child -> GEN_CHILD LPAREN TEXT RPAREN .)


state 47

    (19) list -> LBRACKET items . RBRACKET
    (20) items -> items . COMMA item

    RBRACKET        shift and go to state 49
    COMMA           shift and go to state 50


state 48

    (21) items -> item .

    RBRACKET        reduce using rule 21 (items -> item .)
    COMMA           reduce using rule 21 (items -> item .)


state 49

    (19) list -> LBRACKET items RBRACKET .

    VARIABLE        reduce using rule 19 (list -> LBRACKET items RBRACKET .)
    GEN_CHILD       reduce using rule 19 (list -> LBRACKET items RBRACKET .)
    GEN_END         reduce using rule 19 (list -> LBRACKET items RBRACKET .)
    RBRACKET        reduce using rule 19 (list -> LBRACKET items RBRACKET .)
    COMMA           reduce using rule 19 (list -> LBRACKET items RBRACKET .)


state 50

    (20) items -> items COMMA . item
    (14) item -> . object
    (15) item -> . list
    (16) item -> . NUMBER
    (17) item -> . STRING
    (18) object -> . LCURLY keyvalues RCURLY
    (19) list -> . LBRACKET items RBRACKET

    NUMBER          shift and go to state 43
    STRING          shift and go to state 44
    LCURLY          shift and go to state 18
    LBRACKET        shift and go to state 45

    item                           shift and go to state 51
    object                         shift and go to state 41
    list                           shift and go to state 42

state 51

    (20) items -> items COMMA item .

    RBRACKET        reduce using rule 20 (items -> items COMMA item .)
    COMMA           reduce using rule 20 (items -> items COMMA item .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for GEN_CHILD in state 19 resolved as shift
